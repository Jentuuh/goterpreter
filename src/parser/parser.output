Terminals unused in grammar

    NEWLINE
    IMPORT
    SHORTVARASSIGN


State 110 conflicts: 1 shift/reduce
State 154 conflicts: 1 shift/reduce


Grammar

    0 $accept: sourcefile $end

    1 sourcefile: packageclause SEMICOLON topleveldeclarations
    2           | packageclause SEMICOLON

    3 topleveldeclarations: topleveldecl SEMICOLON topleveldeclarations
    4                     | topleveldecl SEMICOLON

    5 packageclause: PACKAGE packagename

    6 packagename: IDENTIFIER

    7 topleveldecl: declaration
    8             | functiondeclaration

    9 declaration: vardecl

   10 vardecl: VAR LPAREN varspeclist RPAREN
   11        | VAR varspec

   12 varspeclist: varspec
   13            | varspec SEMICOLON varspeclist

   14 varspec: identifierlist type ASSIGN expressionlist
   15        | identifierlist type
   16        | identifierlist ASSIGN expressionlist

   17 functiondeclaration: FUNC functionname signature functionbody

   18 functionname: IDENTIFIER

   19 functionbody: block

   20 signature: parameters LPAREN result RPAREN
   21          | parameters type
   22          | parameters

   23 type: typename
   24     | LPAREN type RPAREN

   25 typelist: type
   26         | typename COMMA typelist

   27 typename: INTEGER
   28         | BOOLEAN

   29 result: parameters
   30       | typelist

   31 parameters: LPAREN RPAREN
   32           | LPAREN parameterlist COMMA RPAREN
   33           | LPAREN parameterlist RPAREN

   34 parameterlist: parameterlist COMMA parameterdecl
   35              | parameterdecl

   36 parameterdecl: identifierlist type
   37              | type

   38 expr: unaryexpr
   39     | expr EQ expr
   40     | expr NE expr
   41     | expr LT expr
   42     | expr LE expr
   43     | expr GT expr
   44     | expr GE expr
   45     | expr MUL expr
   46     | expr DIV expr
   47     | expr PLUS expr
   48     | expr MIN expr
   49     | expr OR expr
   50     | expr AND expr

   51 expressionlist: expressionlist COMMA expr
   52               | expr

   53 identifierlist: identifier COMMA identifierlist
   54               | identifier

   55 identifier: IDENTIFIER

   56 unaryexpr: primaryexpr
   57          | unary_op unaryexpr

   58 unary_op: PLUS
   59         | MIN
   60         | NOT

   61 operand: literal
   62        | operandname
   63        | LPAREN expr RPAREN

   64 literal: basiclit

   65 basiclit: INTLITERAL
   66         | BOOLLITERAL

   67 operandname: IDENTIFIER

   68 primaryexpr: operand
   69            | primaryexpr arguments

   70 arguments: LPAREN RPAREN
   71          | LPAREN expressionlist RPAREN
   72          | LPAREN expressionlist RCOMMA RPAREN

   73 block: LBRACE statementlist RBRACE

   74 statementlist: statement SEMICOLON
   75              | statement SEMICOLON statementlist

   76 statement: declaration
   77          | block
   78          | ifstatement
   79          | forstatement
   80          | returnstatement
   81          | simplestatement
   82          | printstatement

   83 simplestatement: expressionstatement
   84                | assignment
   85                | incdecstatement
   86                | emptystatement

   87 emptystatement: ε

   88 expressionstatement: expr

   89 assignment: expressionlist assign_op expressionlist

   90 assign_op: ASSIGN
   91          | PLUSASSIGN
   92          | MINASSIGN
   93          | MULASSIGN
   94          | DIVASSIGN

   95 incdecstatement: expr INC
   96                | expr DEC

   97 ifstatement: IF simplestatement SEMICOLON expr block ELSE ifstatement
   98            | IF simplestatement SEMICOLON expr block ELSE block
   99            | IF expr block ELSE ifstatement
  100            | IF expr block ELSE block
  101            | IF expr block

  102 forstatement: FOR condition block
  103             | FOR forclause block
  104             | FOR block

  105 condition: expr

  106 forclause: initstatement SEMICOLON condition SEMICOLON poststatement
  107          | initstatement SEMICOLON condition RSEMICOL
  108          | RSEMICOL condition RSEMICOL poststatement

  109 initstatement: simplestatement

  110 poststatement: simplestatement

  111 printstatement: PRINT LPAREN expressionlist RPAREN

  112 returnstatement: RETURN expressionlist
  113                | RETURN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    SEMICOLON (258) 1 2 3 4 13 74 75 97 98 106 107
    INTEGER (259) 27
    BOOLEAN (260) 28
    PACKAGE (261) 5
    RETURN (262) 112 113
    VAR (263) 10 11
    IF (264) 97 98 99 100 101
    FOR (265) 102 103 104
    LPAREN (266) 10 20 24 31 32 33 63 70 71 72 111
    RPAREN (267) 10 20 24 31 32 33 63 70 71 72 111
    LBRACE (268) 73
    RBRACE (269) 73
    PLUS (270) 47 58
    MIN (271) 48 59
    MUL (272) 45
    DIV (273) 46
    PLUSASSIGN (274) 91
    MINASSIGN (275) 92
    MULASSIGN (276) 93
    DIVASSIGN (277) 94
    AND (278) 50
    OR (279) 49
    NOT (280) 60
    INC (281) 95
    DEC (282) 96
    GT (283) 43
    GE (284) 44
    LT (285) 41
    LE (286) 42
    EQ (287) 39
    NE (288) 40
    ASSIGN (289) 14 16 90
    FUNC (290) 17
    NEWLINE (291)
    IMPORT (292)
    COMMA (293) 26 32 34 51 53
    ELSE (294) 97 98 99 100
    SHORTVARASSIGN (295)
    PRINT (296) 111
    IDENTIFIER <id> (297) 6 18 55 67
    BOOLLITERAL <boollit> (298) 66
    INTLITERAL <intlit> (299) 65
    RSEMICOL (300) 107 108
    RCOMMA (301) 72
    UMINUS (302)


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    sourcefile <srcfile> (49)
        on left: 1 2
        on right: 0
    topleveldeclarations <decllist> (50)
        on left: 3 4
        on right: 1 3
    packageclause <packageclause> (51)
        on left: 5
        on right: 1 2
    packagename <identifier> (52)
        on left: 6
        on right: 5
    topleveldecl <toplvldecl> (53)
        on left: 7 8
        on right: 3 4
    declaration <toplvldecl> (54)
        on left: 9
        on right: 7 76
    vardecl <toplvldecl> (55)
        on left: 10 11
        on right: 9
    varspeclist <varspeclist> (56)
        on left: 12 13
        on right: 10 13
    varspec <varspec> (57)
        on left: 14 15 16
        on right: 11 12 13
    functiondeclaration <toplvldecl> (58)
        on left: 17
        on right: 8
    functionname <identifier> (59)
        on left: 18
        on right: 17
    functionbody <block> (60)
        on left: 19
        on right: 17
    signature <signature> (61)
        on left: 20 21 22
        on right: 17
    type <type> (62)
        on left: 23 24
        on right: 14 15 21 24 25 36 37
    typelist <typelist> (63)
        on left: 25 26
        on right: 26 30
    typename <type> (64)
        on left: 27 28
        on right: 23 26
    result <result> (65)
        on left: 29 30
        on right: 20
    parameters <paramlist> (66)
        on left: 31 32 33
        on right: 20 21 22 29
    parameterlist <paramlist> (67)
        on left: 34 35
        on right: 32 33 34
    parameterdecl <paramdecl> (68)
        on left: 36 37
        on right: 34 35
    expr <exp> (69)
        on left: 38 39 40 41 42 43 44 45 46 47 48 49 50
        on right: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 63 88 95 96 97 98 99 100 101 105
    expressionlist <explist> (70)
        on left: 51 52
        on right: 14 16 51 71 72 89 111 112
    identifierlist <identifierlist> (71)
        on left: 53 54
        on right: 14 15 16 36 53
    identifier <identifier> (72)
        on left: 55
        on right: 53 54
    unaryexpr <exp> (73)
        on left: 56 57
        on right: 38 57
    unary_op <unaryoperator> (74)
        on left: 58 59 60
        on right: 57
    operand <operand> (75)
        on left: 61 62 63
        on right: 68
    literal <literal> (76)
        on left: 64
        on right: 61
    basiclit <literal> (77)
        on left: 65 66
        on right: 64
    operandname <identifier> (78)
        on left: 67
        on right: 62
    primaryexpr <exp> (79)
        on left: 68 69
        on right: 56 69
    arguments <explist> (80)
        on left: 70 71 72
        on right: 69
    block <block> (81)
        on left: 73
        on right: 19 77 97 98 99 100 101 102 103 104
    statementlist <stmlist> (82)
        on left: 74 75
        on right: 73 75
    statement <stm> (83)
        on left: 76 77 78 79 80 81 82
        on right: 74 75
    simplestatement <stm> (84)
        on left: 83 84 85 86
        on right: 81 97 98 109 110
    emptystatement <stm> (85)
        on left: 87
        on right: 86
    expressionstatement <stm> (86)
        on left: 88
        on right: 83
    assignment <stm> (87)
        on left: 89
        on right: 84
    assign_op <assignoperator> (88)
        on left: 90 91 92 93 94
        on right: 89
    incdecstatement <stm> (89)
        on left: 95 96
        on right: 85
    ifstatement <stm> (90)
        on left: 97 98 99 100 101
        on right: 78 97 99
    forstatement <stm> (91)
        on left: 102 103 104
        on right: 79
    condition <exp> (92)
        on left: 105
        on right: 102 106 107 108
    forclause <forclause> (93)
        on left: 106 107 108
        on right: 103
    initstatement <stm> (94)
        on left: 109
        on right: 106 107
    poststatement <stm> (95)
        on left: 110
        on right: 106 108
    printstatement <stm> (96)
        on left: 111
        on right: 82
    returnstatement <stm> (97)
        on left: 112 113
        on right: 80


State 0

    0 $accept: • sourcefile $end

    PACKAGE  shift, and go to state 1

    sourcefile     go to state 2
    packageclause  go to state 3


State 1

    5 packageclause: PACKAGE • packagename

    IDENTIFIER  shift, and go to state 4

    packagename  go to state 5


State 2

    0 $accept: sourcefile • $end

    $end  shift, and go to state 6


State 3

    1 sourcefile: packageclause • SEMICOLON topleveldeclarations
    2           | packageclause • SEMICOLON

    SEMICOLON  shift, and go to state 7


State 4

    6 packagename: IDENTIFIER •

    $default  reduce using rule 6 (packagename)


State 5

    5 packageclause: PACKAGE packagename •

    $default  reduce using rule 5 (packageclause)


State 6

    0 $accept: sourcefile $end •

    $default  accept


State 7

    1 sourcefile: packageclause SEMICOLON • topleveldeclarations
    2           | packageclause SEMICOLON •

    VAR   shift, and go to state 8
    FUNC  shift, and go to state 9

    $default  reduce using rule 2 (sourcefile)

    topleveldeclarations  go to state 10
    topleveldecl          go to state 11
    declaration           go to state 12
    vardecl               go to state 13
    functiondeclaration   go to state 14


State 8

   10 vardecl: VAR • LPAREN varspeclist RPAREN
   11        | VAR • varspec

    LPAREN      shift, and go to state 15
    IDENTIFIER  shift, and go to state 16

    varspec         go to state 17
    identifierlist  go to state 18
    identifier      go to state 19


State 9

   17 functiondeclaration: FUNC • functionname signature functionbody

    IDENTIFIER  shift, and go to state 20

    functionname  go to state 21


State 10

    1 sourcefile: packageclause SEMICOLON topleveldeclarations •

    $default  reduce using rule 1 (sourcefile)


State 11

    3 topleveldeclarations: topleveldecl • SEMICOLON topleveldeclarations
    4                     | topleveldecl • SEMICOLON

    SEMICOLON  shift, and go to state 22


State 12

    7 topleveldecl: declaration •

    $default  reduce using rule 7 (topleveldecl)


State 13

    9 declaration: vardecl •

    $default  reduce using rule 9 (declaration)


State 14

    8 topleveldecl: functiondeclaration •

    $default  reduce using rule 8 (topleveldecl)


State 15

   10 vardecl: VAR LPAREN • varspeclist RPAREN

    IDENTIFIER  shift, and go to state 16

    varspeclist     go to state 23
    varspec         go to state 24
    identifierlist  go to state 18
    identifier      go to state 19


State 16

   55 identifier: IDENTIFIER •

    $default  reduce using rule 55 (identifier)


State 17

   11 vardecl: VAR varspec •

    $default  reduce using rule 11 (vardecl)


State 18

   14 varspec: identifierlist • type ASSIGN expressionlist
   15        | identifierlist • type
   16        | identifierlist • ASSIGN expressionlist

    INTEGER  shift, and go to state 25
    BOOLEAN  shift, and go to state 26
    LPAREN   shift, and go to state 27
    ASSIGN   shift, and go to state 28

    type      go to state 29
    typename  go to state 30


State 19

   53 identifierlist: identifier • COMMA identifierlist
   54               | identifier •

    COMMA  shift, and go to state 31

    $default  reduce using rule 54 (identifierlist)


State 20

   18 functionname: IDENTIFIER •

    $default  reduce using rule 18 (functionname)


State 21

   17 functiondeclaration: FUNC functionname • signature functionbody

    LPAREN  shift, and go to state 32

    signature   go to state 33
    parameters  go to state 34


State 22

    3 topleveldeclarations: topleveldecl SEMICOLON • topleveldeclarations
    4                     | topleveldecl SEMICOLON •

    VAR   shift, and go to state 8
    FUNC  shift, and go to state 9

    $default  reduce using rule 4 (topleveldeclarations)

    topleveldeclarations  go to state 35
    topleveldecl          go to state 11
    declaration           go to state 12
    vardecl               go to state 13
    functiondeclaration   go to state 14


State 23

   10 vardecl: VAR LPAREN varspeclist • RPAREN

    RPAREN  shift, and go to state 36


State 24

   12 varspeclist: varspec •
   13            | varspec • SEMICOLON varspeclist

    SEMICOLON  shift, and go to state 37

    $default  reduce using rule 12 (varspeclist)


State 25

   27 typename: INTEGER •

    $default  reduce using rule 27 (typename)


State 26

   28 typename: BOOLEAN •

    $default  reduce using rule 28 (typename)


State 27

   24 type: LPAREN • type RPAREN

    INTEGER  shift, and go to state 25
    BOOLEAN  shift, and go to state 26
    LPAREN   shift, and go to state 27

    type      go to state 38
    typename  go to state 30


State 28

   16 varspec: identifierlist ASSIGN • expressionlist

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr            go to state 46
    expressionlist  go to state 47
    unaryexpr       go to state 48
    unary_op        go to state 49
    operand         go to state 50
    literal         go to state 51
    basiclit        go to state 52
    operandname     go to state 53
    primaryexpr     go to state 54


State 29

   14 varspec: identifierlist type • ASSIGN expressionlist
   15        | identifierlist type •

    ASSIGN  shift, and go to state 55

    $default  reduce using rule 15 (varspec)


State 30

   23 type: typename •

    $default  reduce using rule 23 (type)


State 31

   53 identifierlist: identifier COMMA • identifierlist

    IDENTIFIER  shift, and go to state 16

    identifierlist  go to state 56
    identifier      go to state 19


State 32

   31 parameters: LPAREN • RPAREN
   32           | LPAREN • parameterlist COMMA RPAREN
   33           | LPAREN • parameterlist RPAREN

    INTEGER     shift, and go to state 25
    BOOLEAN     shift, and go to state 26
    LPAREN      shift, and go to state 27
    RPAREN      shift, and go to state 57
    IDENTIFIER  shift, and go to state 16

    type            go to state 58
    typename        go to state 30
    parameterlist   go to state 59
    parameterdecl   go to state 60
    identifierlist  go to state 61
    identifier      go to state 19


State 33

   17 functiondeclaration: FUNC functionname signature • functionbody

    LBRACE  shift, and go to state 62

    functionbody  go to state 63
    block         go to state 64


State 34

   20 signature: parameters • LPAREN result RPAREN
   21          | parameters • type
   22          | parameters •

    INTEGER  shift, and go to state 25
    BOOLEAN  shift, and go to state 26
    LPAREN   shift, and go to state 65

    $default  reduce using rule 22 (signature)

    type      go to state 66
    typename  go to state 30


State 35

    3 topleveldeclarations: topleveldecl SEMICOLON topleveldeclarations •

    $default  reduce using rule 3 (topleveldeclarations)


State 36

   10 vardecl: VAR LPAREN varspeclist RPAREN •

    $default  reduce using rule 10 (vardecl)


State 37

   13 varspeclist: varspec SEMICOLON • varspeclist

    IDENTIFIER  shift, and go to state 16

    varspeclist     go to state 67
    varspec         go to state 24
    identifierlist  go to state 18
    identifier      go to state 19


State 38

   24 type: LPAREN type • RPAREN

    RPAREN  shift, and go to state 68


State 39

   63 operand: LPAREN • expr RPAREN

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr         go to state 69
    unaryexpr    go to state 48
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54


State 40

   58 unary_op: PLUS •

    $default  reduce using rule 58 (unary_op)


State 41

   59 unary_op: MIN •

    $default  reduce using rule 59 (unary_op)


State 42

   60 unary_op: NOT •

    $default  reduce using rule 60 (unary_op)


State 43

   67 operandname: IDENTIFIER •

    $default  reduce using rule 67 (operandname)


State 44

   66 basiclit: BOOLLITERAL •

    $default  reduce using rule 66 (basiclit)


State 45

   65 basiclit: INTLITERAL •

    $default  reduce using rule 65 (basiclit)


State 46

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr
   52 expressionlist: expr •

    PLUS  shift, and go to state 70
    MIN   shift, and go to state 71
    MUL   shift, and go to state 72
    DIV   shift, and go to state 73
    AND   shift, and go to state 74
    OR    shift, and go to state 75
    GT    shift, and go to state 76
    GE    shift, and go to state 77
    LT    shift, and go to state 78
    LE    shift, and go to state 79
    EQ    shift, and go to state 80
    NE    shift, and go to state 81

    $default  reduce using rule 52 (expressionlist)


State 47

   16 varspec: identifierlist ASSIGN expressionlist •
   51 expressionlist: expressionlist • COMMA expr

    COMMA  shift, and go to state 82

    $default  reduce using rule 16 (varspec)


State 48

   38 expr: unaryexpr •

    $default  reduce using rule 38 (expr)


State 49

   57 unaryexpr: unary_op • unaryexpr

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    unaryexpr    go to state 83
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54


State 50

   68 primaryexpr: operand •

    $default  reduce using rule 68 (primaryexpr)


State 51

   61 operand: literal •

    $default  reduce using rule 61 (operand)


State 52

   64 literal: basiclit •

    $default  reduce using rule 64 (literal)


State 53

   62 operand: operandname •

    $default  reduce using rule 62 (operand)


State 54

   56 unaryexpr: primaryexpr •
   69 primaryexpr: primaryexpr • arguments

    LPAREN  shift, and go to state 84

    $default  reduce using rule 56 (unaryexpr)

    arguments  go to state 85


State 55

   14 varspec: identifierlist type ASSIGN • expressionlist

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr            go to state 46
    expressionlist  go to state 86
    unaryexpr       go to state 48
    unary_op        go to state 49
    operand         go to state 50
    literal         go to state 51
    basiclit        go to state 52
    operandname     go to state 53
    primaryexpr     go to state 54


State 56

   53 identifierlist: identifier COMMA identifierlist •

    $default  reduce using rule 53 (identifierlist)


State 57

   31 parameters: LPAREN RPAREN •

    $default  reduce using rule 31 (parameters)


State 58

   37 parameterdecl: type •

    $default  reduce using rule 37 (parameterdecl)


State 59

   32 parameters: LPAREN parameterlist • COMMA RPAREN
   33           | LPAREN parameterlist • RPAREN
   34 parameterlist: parameterlist • COMMA parameterdecl

    RPAREN  shift, and go to state 87
    COMMA   shift, and go to state 88


State 60

   35 parameterlist: parameterdecl •

    $default  reduce using rule 35 (parameterlist)


State 61

   36 parameterdecl: identifierlist • type

    INTEGER  shift, and go to state 25
    BOOLEAN  shift, and go to state 26
    LPAREN   shift, and go to state 27

    type      go to state 89
    typename  go to state 30


State 62

   73 block: LBRACE • statementlist RBRACE

    RETURN       shift, and go to state 90
    VAR          shift, and go to state 8
    IF           shift, and go to state 91
    FOR          shift, and go to state 92
    LPAREN       shift, and go to state 39
    LBRACE       shift, and go to state 62
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    PRINT        shift, and go to state 93
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    $default  reduce using rule 87 (emptystatement)

    declaration          go to state 94
    vardecl              go to state 13
    expr                 go to state 95
    expressionlist       go to state 96
    unaryexpr            go to state 48
    unary_op             go to state 49
    operand              go to state 50
    literal              go to state 51
    basiclit             go to state 52
    operandname          go to state 53
    primaryexpr          go to state 54
    block                go to state 97
    statementlist        go to state 98
    statement            go to state 99
    simplestatement      go to state 100
    emptystatement       go to state 101
    expressionstatement  go to state 102
    assignment           go to state 103
    incdecstatement      go to state 104
    ifstatement          go to state 105
    forstatement         go to state 106
    printstatement       go to state 107
    returnstatement      go to state 108


State 63

   17 functiondeclaration: FUNC functionname signature functionbody •

    $default  reduce using rule 17 (functiondeclaration)


State 64

   19 functionbody: block •

    $default  reduce using rule 19 (functionbody)


State 65

   20 signature: parameters LPAREN • result RPAREN
   24 type: LPAREN • type RPAREN

    INTEGER  shift, and go to state 25
    BOOLEAN  shift, and go to state 26
    LPAREN   shift, and go to state 109

    type        go to state 110
    typelist    go to state 111
    typename    go to state 112
    result      go to state 113
    parameters  go to state 114


State 66

   21 signature: parameters type •

    $default  reduce using rule 21 (signature)


State 67

   13 varspeclist: varspec SEMICOLON varspeclist •

    $default  reduce using rule 13 (varspeclist)


State 68

   24 type: LPAREN type RPAREN •

    $default  reduce using rule 24 (type)


State 69

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr
   63 operand: LPAREN expr • RPAREN

    RPAREN  shift, and go to state 115
    PLUS    shift, and go to state 70
    MIN     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75
    GT      shift, and go to state 76
    GE      shift, and go to state 77
    LT      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81


State 70

   47 expr: expr PLUS • expr

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr         go to state 116
    unaryexpr    go to state 48
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54


State 71

   48 expr: expr MIN • expr

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr         go to state 117
    unaryexpr    go to state 48
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54


State 72

   45 expr: expr MUL • expr

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr         go to state 118
    unaryexpr    go to state 48
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54


State 73

   46 expr: expr DIV • expr

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr         go to state 119
    unaryexpr    go to state 48
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54


State 74

   50 expr: expr AND • expr

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr         go to state 120
    unaryexpr    go to state 48
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54


State 75

   49 expr: expr OR • expr

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr         go to state 121
    unaryexpr    go to state 48
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54


State 76

   43 expr: expr GT • expr

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr         go to state 122
    unaryexpr    go to state 48
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54


State 77

   44 expr: expr GE • expr

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr         go to state 123
    unaryexpr    go to state 48
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54


State 78

   41 expr: expr LT • expr

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr         go to state 124
    unaryexpr    go to state 48
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54


State 79

   42 expr: expr LE • expr

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr         go to state 125
    unaryexpr    go to state 48
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54


State 80

   39 expr: expr EQ • expr

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr         go to state 126
    unaryexpr    go to state 48
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54


State 81

   40 expr: expr NE • expr

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr         go to state 127
    unaryexpr    go to state 48
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54


State 82

   51 expressionlist: expressionlist COMMA • expr

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr         go to state 128
    unaryexpr    go to state 48
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54


State 83

   57 unaryexpr: unary_op unaryexpr •

    $default  reduce using rule 57 (unaryexpr)


State 84

   70 arguments: LPAREN • RPAREN
   71          | LPAREN • expressionlist RPAREN
   72          | LPAREN • expressionlist RCOMMA RPAREN

    LPAREN       shift, and go to state 39
    RPAREN       shift, and go to state 129
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr            go to state 46
    expressionlist  go to state 130
    unaryexpr       go to state 48
    unary_op        go to state 49
    operand         go to state 50
    literal         go to state 51
    basiclit        go to state 52
    operandname     go to state 53
    primaryexpr     go to state 54


State 85

   69 primaryexpr: primaryexpr arguments •

    $default  reduce using rule 69 (primaryexpr)


State 86

   14 varspec: identifierlist type ASSIGN expressionlist •
   51 expressionlist: expressionlist • COMMA expr

    COMMA  shift, and go to state 82

    $default  reduce using rule 14 (varspec)


State 87

   33 parameters: LPAREN parameterlist RPAREN •

    $default  reduce using rule 33 (parameters)


State 88

   32 parameters: LPAREN parameterlist COMMA • RPAREN
   34 parameterlist: parameterlist COMMA • parameterdecl

    INTEGER     shift, and go to state 25
    BOOLEAN     shift, and go to state 26
    LPAREN      shift, and go to state 27
    RPAREN      shift, and go to state 131
    IDENTIFIER  shift, and go to state 16

    type            go to state 58
    typename        go to state 30
    parameterdecl   go to state 132
    identifierlist  go to state 61
    identifier      go to state 19


State 89

   36 parameterdecl: identifierlist type •

    $default  reduce using rule 36 (parameterdecl)


State 90

  112 returnstatement: RETURN • expressionlist
  113                | RETURN •

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    $default  reduce using rule 113 (returnstatement)

    expr            go to state 46
    expressionlist  go to state 133
    unaryexpr       go to state 48
    unary_op        go to state 49
    operand         go to state 50
    literal         go to state 51
    basiclit        go to state 52
    operandname     go to state 53
    primaryexpr     go to state 54


State 91

   97 ifstatement: IF • simplestatement SEMICOLON expr block ELSE ifstatement
   98            | IF • simplestatement SEMICOLON expr block ELSE block
   99            | IF • expr block ELSE ifstatement
  100            | IF • expr block ELSE block
  101            | IF • expr block

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    $default  reduce using rule 87 (emptystatement)

    expr                 go to state 134
    expressionlist       go to state 96
    unaryexpr            go to state 48
    unary_op             go to state 49
    operand              go to state 50
    literal              go to state 51
    basiclit             go to state 52
    operandname          go to state 53
    primaryexpr          go to state 54
    simplestatement      go to state 135
    emptystatement       go to state 101
    expressionstatement  go to state 102
    assignment           go to state 103
    incdecstatement      go to state 104


State 92

  102 forstatement: FOR • condition block
  103             | FOR • forclause block
  104             | FOR • block

    LPAREN       shift, and go to state 39
    LBRACE       shift, and go to state 62
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45
    RSEMICOL     shift, and go to state 136

    $default  reduce using rule 87 (emptystatement)

    expr                 go to state 137
    expressionlist       go to state 96
    unaryexpr            go to state 48
    unary_op             go to state 49
    operand              go to state 50
    literal              go to state 51
    basiclit             go to state 52
    operandname          go to state 53
    primaryexpr          go to state 54
    block                go to state 138
    simplestatement      go to state 139
    emptystatement       go to state 101
    expressionstatement  go to state 102
    assignment           go to state 103
    incdecstatement      go to state 104
    condition            go to state 140
    forclause            go to state 141
    initstatement        go to state 142


State 93

  111 printstatement: PRINT • LPAREN expressionlist RPAREN

    LPAREN  shift, and go to state 143


State 94

   76 statement: declaration •

    $default  reduce using rule 76 (statement)


State 95

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr
   52 expressionlist: expr •
   88 expressionstatement: expr •
   95 incdecstatement: expr • INC
   96                | expr • DEC

    PLUS  shift, and go to state 70
    MIN   shift, and go to state 71
    MUL   shift, and go to state 72
    DIV   shift, and go to state 73
    AND   shift, and go to state 74
    OR    shift, and go to state 75
    INC   shift, and go to state 144
    DEC   shift, and go to state 145
    GT    shift, and go to state 76
    GE    shift, and go to state 77
    LT    shift, and go to state 78
    LE    shift, and go to state 79
    EQ    shift, and go to state 80
    NE    shift, and go to state 81

    SEMICOLON  reduce using rule 88 (expressionstatement)
    LBRACE     reduce using rule 88 (expressionstatement)
    $default   reduce using rule 52 (expressionlist)


State 96

   51 expressionlist: expressionlist • COMMA expr
   89 assignment: expressionlist • assign_op expressionlist

    PLUSASSIGN  shift, and go to state 146
    MINASSIGN   shift, and go to state 147
    MULASSIGN   shift, and go to state 148
    DIVASSIGN   shift, and go to state 149
    ASSIGN      shift, and go to state 150
    COMMA       shift, and go to state 82

    assign_op  go to state 151


State 97

   77 statement: block •

    $default  reduce using rule 77 (statement)


State 98

   73 block: LBRACE statementlist • RBRACE

    RBRACE  shift, and go to state 152


State 99

   74 statementlist: statement • SEMICOLON
   75              | statement • SEMICOLON statementlist

    SEMICOLON  shift, and go to state 153


State 100

   81 statement: simplestatement •

    $default  reduce using rule 81 (statement)


State 101

   86 simplestatement: emptystatement •

    $default  reduce using rule 86 (simplestatement)


State 102

   83 simplestatement: expressionstatement •

    $default  reduce using rule 83 (simplestatement)


State 103

   84 simplestatement: assignment •

    $default  reduce using rule 84 (simplestatement)


State 104

   85 simplestatement: incdecstatement •

    $default  reduce using rule 85 (simplestatement)


State 105

   78 statement: ifstatement •

    $default  reduce using rule 78 (statement)


State 106

   79 statement: forstatement •

    $default  reduce using rule 79 (statement)


State 107

   82 statement: printstatement •

    $default  reduce using rule 82 (statement)


State 108

   80 statement: returnstatement •

    $default  reduce using rule 80 (statement)


State 109

   24 type: LPAREN • type RPAREN
   31 parameters: LPAREN • RPAREN
   32           | LPAREN • parameterlist COMMA RPAREN
   33           | LPAREN • parameterlist RPAREN

    INTEGER     shift, and go to state 25
    BOOLEAN     shift, and go to state 26
    LPAREN      shift, and go to state 27
    RPAREN      shift, and go to state 57
    IDENTIFIER  shift, and go to state 16

    type            go to state 154
    typename        go to state 30
    parameterlist   go to state 59
    parameterdecl   go to state 60
    identifierlist  go to state 61
    identifier      go to state 19


State 110

   24 type: LPAREN type • RPAREN
   25 typelist: type •

    RPAREN  shift, and go to state 68

    RPAREN  [reduce using rule 25 (typelist)]


State 111

   30 result: typelist •

    $default  reduce using rule 30 (result)


State 112

   23 type: typename •
   26 typelist: typename • COMMA typelist

    COMMA  shift, and go to state 155

    $default  reduce using rule 23 (type)


State 113

   20 signature: parameters LPAREN result • RPAREN

    RPAREN  shift, and go to state 156


State 114

   29 result: parameters •

    $default  reduce using rule 29 (result)


State 115

   63 operand: LPAREN expr RPAREN •

    $default  reduce using rule 63 (operand)


State 116

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   47     | expr PLUS expr •
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr

    MUL  shift, and go to state 72
    DIV  shift, and go to state 73

    $default  reduce using rule 47 (expr)


State 117

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   48     | expr MIN expr •
   49     | expr • OR expr
   50     | expr • AND expr

    MUL  shift, and go to state 72
    DIV  shift, and go to state 73

    $default  reduce using rule 48 (expr)


State 118

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   45     | expr MUL expr •
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr

    $default  reduce using rule 45 (expr)


State 119

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   46     | expr DIV expr •
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr

    $default  reduce using rule 46 (expr)


State 120

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr
   50     | expr AND expr •

    PLUS  shift, and go to state 70
    MIN   shift, and go to state 71
    MUL   shift, and go to state 72
    DIV   shift, and go to state 73
    GT    shift, and go to state 76
    GE    shift, and go to state 77
    LT    shift, and go to state 78
    LE    shift, and go to state 79
    EQ    shift, and go to state 80
    NE    shift, and go to state 81

    $default  reduce using rule 50 (expr)


State 121

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   49     | expr OR expr •
   50     | expr • AND expr

    PLUS  shift, and go to state 70
    MIN   shift, and go to state 71
    MUL   shift, and go to state 72
    DIV   shift, and go to state 73
    AND   shift, and go to state 74
    GT    shift, and go to state 76
    GE    shift, and go to state 77
    LT    shift, and go to state 78
    LE    shift, and go to state 79
    EQ    shift, and go to state 80
    NE    shift, and go to state 81

    $default  reduce using rule 49 (expr)


State 122

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   43     | expr GT expr •
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr

    PLUS  shift, and go to state 70
    MIN   shift, and go to state 71
    MUL   shift, and go to state 72
    DIV   shift, and go to state 73

    $default  reduce using rule 43 (expr)


State 123

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   44     | expr GE expr •
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr

    PLUS  shift, and go to state 70
    MIN   shift, and go to state 71
    MUL   shift, and go to state 72
    DIV   shift, and go to state 73

    $default  reduce using rule 44 (expr)


State 124

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   41     | expr LT expr •
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr

    PLUS  shift, and go to state 70
    MIN   shift, and go to state 71
    MUL   shift, and go to state 72
    DIV   shift, and go to state 73

    $default  reduce using rule 41 (expr)


State 125

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   42     | expr LE expr •
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr

    PLUS  shift, and go to state 70
    MIN   shift, and go to state 71
    MUL   shift, and go to state 72
    DIV   shift, and go to state 73

    $default  reduce using rule 42 (expr)


State 126

   39 expr: expr • EQ expr
   39     | expr EQ expr •
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr

    PLUS  shift, and go to state 70
    MIN   shift, and go to state 71
    MUL   shift, and go to state 72
    DIV   shift, and go to state 73

    $default  reduce using rule 39 (expr)


State 127

   39 expr: expr • EQ expr
   40     | expr • NE expr
   40     | expr NE expr •
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr

    PLUS  shift, and go to state 70
    MIN   shift, and go to state 71
    MUL   shift, and go to state 72
    DIV   shift, and go to state 73

    $default  reduce using rule 40 (expr)


State 128

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr
   51 expressionlist: expressionlist COMMA expr •

    PLUS  shift, and go to state 70
    MIN   shift, and go to state 71
    MUL   shift, and go to state 72
    DIV   shift, and go to state 73
    AND   shift, and go to state 74
    OR    shift, and go to state 75
    GT    shift, and go to state 76
    GE    shift, and go to state 77
    LT    shift, and go to state 78
    LE    shift, and go to state 79
    EQ    shift, and go to state 80
    NE    shift, and go to state 81

    $default  reduce using rule 51 (expressionlist)


State 129

   70 arguments: LPAREN RPAREN •

    $default  reduce using rule 70 (arguments)


State 130

   51 expressionlist: expressionlist • COMMA expr
   71 arguments: LPAREN expressionlist • RPAREN
   72          | LPAREN expressionlist • RCOMMA RPAREN

    RPAREN  shift, and go to state 157
    COMMA   shift, and go to state 82
    RCOMMA  shift, and go to state 158


State 131

   32 parameters: LPAREN parameterlist COMMA RPAREN •

    $default  reduce using rule 32 (parameters)


State 132

   34 parameterlist: parameterlist COMMA parameterdecl •

    $default  reduce using rule 34 (parameterlist)


State 133

   51 expressionlist: expressionlist • COMMA expr
  112 returnstatement: RETURN expressionlist •

    COMMA  shift, and go to state 82

    $default  reduce using rule 112 (returnstatement)


State 134

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr
   52 expressionlist: expr •
   88 expressionstatement: expr •
   95 incdecstatement: expr • INC
   96                | expr • DEC
   99 ifstatement: IF expr • block ELSE ifstatement
  100            | IF expr • block ELSE block
  101            | IF expr • block

    LBRACE  shift, and go to state 62
    PLUS    shift, and go to state 70
    MIN     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75
    INC     shift, and go to state 144
    DEC     shift, and go to state 145
    GT      shift, and go to state 76
    GE      shift, and go to state 77
    LT      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81

    SEMICOLON  reduce using rule 88 (expressionstatement)
    $default   reduce using rule 52 (expressionlist)

    block  go to state 159


State 135

   97 ifstatement: IF simplestatement • SEMICOLON expr block ELSE ifstatement
   98            | IF simplestatement • SEMICOLON expr block ELSE block

    SEMICOLON  shift, and go to state 160


State 136

  108 forclause: RSEMICOL • condition RSEMICOL poststatement

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr         go to state 161
    unaryexpr    go to state 48
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54
    condition    go to state 162


State 137

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr
   52 expressionlist: expr •
   88 expressionstatement: expr •
   95 incdecstatement: expr • INC
   96                | expr • DEC
  105 condition: expr •

    PLUS  shift, and go to state 70
    MIN   shift, and go to state 71
    MUL   shift, and go to state 72
    DIV   shift, and go to state 73
    AND   shift, and go to state 74
    OR    shift, and go to state 75
    INC   shift, and go to state 144
    DEC   shift, and go to state 145
    GT    shift, and go to state 76
    GE    shift, and go to state 77
    LT    shift, and go to state 78
    LE    shift, and go to state 79
    EQ    shift, and go to state 80
    NE    shift, and go to state 81

    SEMICOLON  reduce using rule 88 (expressionstatement)
    LBRACE     reduce using rule 105 (condition)
    $default   reduce using rule 52 (expressionlist)


State 138

  104 forstatement: FOR block •

    $default  reduce using rule 104 (forstatement)


State 139

  109 initstatement: simplestatement •

    $default  reduce using rule 109 (initstatement)


State 140

  102 forstatement: FOR condition • block

    LBRACE  shift, and go to state 62

    block  go to state 163


State 141

  103 forstatement: FOR forclause • block

    LBRACE  shift, and go to state 62

    block  go to state 164


State 142

  106 forclause: initstatement • SEMICOLON condition SEMICOLON poststatement
  107          | initstatement • SEMICOLON condition RSEMICOL

    SEMICOLON  shift, and go to state 165


State 143

  111 printstatement: PRINT LPAREN • expressionlist RPAREN

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr            go to state 46
    expressionlist  go to state 166
    unaryexpr       go to state 48
    unary_op        go to state 49
    operand         go to state 50
    literal         go to state 51
    basiclit        go to state 52
    operandname     go to state 53
    primaryexpr     go to state 54


State 144

   95 incdecstatement: expr INC •

    $default  reduce using rule 95 (incdecstatement)


State 145

   96 incdecstatement: expr DEC •

    $default  reduce using rule 96 (incdecstatement)


State 146

   91 assign_op: PLUSASSIGN •

    $default  reduce using rule 91 (assign_op)


State 147

   92 assign_op: MINASSIGN •

    $default  reduce using rule 92 (assign_op)


State 148

   93 assign_op: MULASSIGN •

    $default  reduce using rule 93 (assign_op)


State 149

   94 assign_op: DIVASSIGN •

    $default  reduce using rule 94 (assign_op)


State 150

   90 assign_op: ASSIGN •

    $default  reduce using rule 90 (assign_op)


State 151

   89 assignment: expressionlist assign_op • expressionlist

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr            go to state 46
    expressionlist  go to state 167
    unaryexpr       go to state 48
    unary_op        go to state 49
    operand         go to state 50
    literal         go to state 51
    basiclit        go to state 52
    operandname     go to state 53
    primaryexpr     go to state 54


State 152

   73 block: LBRACE statementlist RBRACE •

    $default  reduce using rule 73 (block)


State 153

   74 statementlist: statement SEMICOLON •
   75              | statement SEMICOLON • statementlist

    RETURN       shift, and go to state 90
    VAR          shift, and go to state 8
    IF           shift, and go to state 91
    FOR          shift, and go to state 92
    LPAREN       shift, and go to state 39
    LBRACE       shift, and go to state 62
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    PRINT        shift, and go to state 93
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    SEMICOLON  reduce using rule 87 (emptystatement)
    $default   reduce using rule 74 (statementlist)

    declaration          go to state 94
    vardecl              go to state 13
    expr                 go to state 95
    expressionlist       go to state 96
    unaryexpr            go to state 48
    unary_op             go to state 49
    operand              go to state 50
    literal              go to state 51
    basiclit             go to state 52
    operandname          go to state 53
    primaryexpr          go to state 54
    block                go to state 97
    statementlist        go to state 168
    statement            go to state 99
    simplestatement      go to state 100
    emptystatement       go to state 101
    expressionstatement  go to state 102
    assignment           go to state 103
    incdecstatement      go to state 104
    ifstatement          go to state 105
    forstatement         go to state 106
    printstatement       go to state 107
    returnstatement      go to state 108


State 154

   24 type: LPAREN type • RPAREN
   37 parameterdecl: type •

    RPAREN  shift, and go to state 68

    RPAREN    [reduce using rule 37 (parameterdecl)]
    $default  reduce using rule 37 (parameterdecl)


State 155

   26 typelist: typename COMMA • typelist

    INTEGER  shift, and go to state 25
    BOOLEAN  shift, and go to state 26
    LPAREN   shift, and go to state 27

    type      go to state 169
    typelist  go to state 170
    typename  go to state 112


State 156

   20 signature: parameters LPAREN result RPAREN •

    $default  reduce using rule 20 (signature)


State 157

   71 arguments: LPAREN expressionlist RPAREN •

    $default  reduce using rule 71 (arguments)


State 158

   72 arguments: LPAREN expressionlist RCOMMA • RPAREN

    RPAREN  shift, and go to state 171


State 159

   99 ifstatement: IF expr block • ELSE ifstatement
  100            | IF expr block • ELSE block
  101            | IF expr block •

    ELSE  shift, and go to state 172

    $default  reduce using rule 101 (ifstatement)


State 160

   97 ifstatement: IF simplestatement SEMICOLON • expr block ELSE ifstatement
   98            | IF simplestatement SEMICOLON • expr block ELSE block

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr         go to state 173
    unaryexpr    go to state 48
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54


State 161

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr
  105 condition: expr •

    PLUS  shift, and go to state 70
    MIN   shift, and go to state 71
    MUL   shift, and go to state 72
    DIV   shift, and go to state 73
    AND   shift, and go to state 74
    OR    shift, and go to state 75
    GT    shift, and go to state 76
    GE    shift, and go to state 77
    LT    shift, and go to state 78
    LE    shift, and go to state 79
    EQ    shift, and go to state 80
    NE    shift, and go to state 81

    $default  reduce using rule 105 (condition)


State 162

  108 forclause: RSEMICOL condition • RSEMICOL poststatement

    RSEMICOL  shift, and go to state 174


State 163

  102 forstatement: FOR condition block •

    $default  reduce using rule 102 (forstatement)


State 164

  103 forstatement: FOR forclause block •

    $default  reduce using rule 103 (forstatement)


State 165

  106 forclause: initstatement SEMICOLON • condition SEMICOLON poststatement
  107          | initstatement SEMICOLON • condition RSEMICOL

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    expr         go to state 161
    unaryexpr    go to state 48
    unary_op     go to state 49
    operand      go to state 50
    literal      go to state 51
    basiclit     go to state 52
    operandname  go to state 53
    primaryexpr  go to state 54
    condition    go to state 175


State 166

   51 expressionlist: expressionlist • COMMA expr
  111 printstatement: PRINT LPAREN expressionlist • RPAREN

    RPAREN  shift, and go to state 176
    COMMA   shift, and go to state 82


State 167

   51 expressionlist: expressionlist • COMMA expr
   89 assignment: expressionlist assign_op expressionlist •

    COMMA  shift, and go to state 82

    $default  reduce using rule 89 (assignment)


State 168

   75 statementlist: statement SEMICOLON statementlist •

    $default  reduce using rule 75 (statementlist)


State 169

   25 typelist: type •

    $default  reduce using rule 25 (typelist)


State 170

   26 typelist: typename COMMA typelist •

    $default  reduce using rule 26 (typelist)


State 171

   72 arguments: LPAREN expressionlist RCOMMA RPAREN •

    $default  reduce using rule 72 (arguments)


State 172

   99 ifstatement: IF expr block ELSE • ifstatement
  100            | IF expr block ELSE • block

    IF      shift, and go to state 91
    LBRACE  shift, and go to state 62

    block        go to state 177
    ifstatement  go to state 178


State 173

   39 expr: expr • EQ expr
   40     | expr • NE expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • MUL expr
   46     | expr • DIV expr
   47     | expr • PLUS expr
   48     | expr • MIN expr
   49     | expr • OR expr
   50     | expr • AND expr
   97 ifstatement: IF simplestatement SEMICOLON expr • block ELSE ifstatement
   98            | IF simplestatement SEMICOLON expr • block ELSE block

    LBRACE  shift, and go to state 62
    PLUS    shift, and go to state 70
    MIN     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    AND     shift, and go to state 74
    OR      shift, and go to state 75
    GT      shift, and go to state 76
    GE      shift, and go to state 77
    LT      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    NE      shift, and go to state 81

    block  go to state 179


State 174

  108 forclause: RSEMICOL condition RSEMICOL • poststatement

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    $default  reduce using rule 87 (emptystatement)

    expr                 go to state 95
    expressionlist       go to state 96
    unaryexpr            go to state 48
    unary_op             go to state 49
    operand              go to state 50
    literal              go to state 51
    basiclit             go to state 52
    operandname          go to state 53
    primaryexpr          go to state 54
    simplestatement      go to state 180
    emptystatement       go to state 101
    expressionstatement  go to state 102
    assignment           go to state 103
    incdecstatement      go to state 104
    poststatement        go to state 181


State 175

  106 forclause: initstatement SEMICOLON condition • SEMICOLON poststatement
  107          | initstatement SEMICOLON condition • RSEMICOL

    SEMICOLON  shift, and go to state 182
    RSEMICOL   shift, and go to state 183


State 176

  111 printstatement: PRINT LPAREN expressionlist RPAREN •

    $default  reduce using rule 111 (printstatement)


State 177

  100 ifstatement: IF expr block ELSE block •

    $default  reduce using rule 100 (ifstatement)


State 178

   99 ifstatement: IF expr block ELSE ifstatement •

    $default  reduce using rule 99 (ifstatement)


State 179

   97 ifstatement: IF simplestatement SEMICOLON expr block • ELSE ifstatement
   98            | IF simplestatement SEMICOLON expr block • ELSE block

    ELSE  shift, and go to state 184


State 180

  110 poststatement: simplestatement •

    $default  reduce using rule 110 (poststatement)


State 181

  108 forclause: RSEMICOL condition RSEMICOL poststatement •

    $default  reduce using rule 108 (forclause)


State 182

  106 forclause: initstatement SEMICOLON condition SEMICOLON • poststatement

    LPAREN       shift, and go to state 39
    PLUS         shift, and go to state 40
    MIN          shift, and go to state 41
    NOT          shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    BOOLLITERAL  shift, and go to state 44
    INTLITERAL   shift, and go to state 45

    $default  reduce using rule 87 (emptystatement)

    expr                 go to state 95
    expressionlist       go to state 96
    unaryexpr            go to state 48
    unary_op             go to state 49
    operand              go to state 50
    literal              go to state 51
    basiclit             go to state 52
    operandname          go to state 53
    primaryexpr          go to state 54
    simplestatement      go to state 180
    emptystatement       go to state 101
    expressionstatement  go to state 102
    assignment           go to state 103
    incdecstatement      go to state 104
    poststatement        go to state 185


State 183

  107 forclause: initstatement SEMICOLON condition RSEMICOL •

    $default  reduce using rule 107 (forclause)


State 184

   97 ifstatement: IF simplestatement SEMICOLON expr block ELSE • ifstatement
   98            | IF simplestatement SEMICOLON expr block ELSE • block

    IF      shift, and go to state 91
    LBRACE  shift, and go to state 62

    block        go to state 186
    ifstatement  go to state 187


State 185

  106 forclause: initstatement SEMICOLON condition SEMICOLON poststatement •

    $default  reduce using rule 106 (forclause)


State 186

   98 ifstatement: IF simplestatement SEMICOLON expr block ELSE block •

    $default  reduce using rule 98 (ifstatement)


State 187

   97 ifstatement: IF simplestatement SEMICOLON expr block ELSE ifstatement •

    $default  reduce using rule 97 (ifstatement)
