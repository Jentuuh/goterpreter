Terminals unused in grammar

    NEWLINE
    IMPORT


State 56 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce
State 109 conflicts: 1 shift/reduce


Grammar

    0 $accept: sourcefile $end

    1 sourcefile: packageclause SEMICOLON topleveldeclarations
    2           | packageclause SEMICOLON

    3 topleveldeclarations: topleveldecl SEMICOLON topleveldeclarations
    4                     | topleveldecl SEMICOLON

    5 packageclause: PACKAGE packagename

    6 packagename: IDENTIFIER

    7 topleveldecl: declaration
    8             | functiondeclaration

    9 declaration: vardecl

   10 vardecl: VAR varspec
   11        | VAR LPAREN varspec SEMICOLON RPAREN

   12 shortvardecl: identifierlist SHORTVARASSIGN expressionlist

   13 varspec: identifierlist type ASSIGN expressionlist
   14        | identifierlist type
   15        | identifierlist ASSIGN expressionlist

   16 functiondeclaration: FUNC functionname signature functionbody

   17 functionname: IDENTIFIER

   18 functionbody: block

   19 signature: parameters result
   20          | parameters

   21 type: typename
   22     | LPAREN type RPAREN

   23 typename: IDENTIFIER
   24         | INTEGER
   25         | BOOLEAN

   26 result: parameters
   27       | type

   28 parameters: LPAREN RPAREN
   29           | LPAREN parameterlist COMMA RPAREN
   30           | LPAREN parameterlist RPAREN

   31 parameterlist: parameterlist COMMA parameterdecl
   32              | parameterdecl

   33 parameterdecl: identifierlist type
   34              | type

   35 expr: unaryexpr
   36     | expr EQ expr
   37     | expr NE expr
   38     | expr LT expr
   39     | expr LE expr
   40     | expr GT expr
   41     | expr GE expr
   42     | expr MUL expr
   43     | expr DIV expr
   44     | expr PLUS expr
   45     | expr MIN expr
   46     | expr OR expr
   47     | expr AND expr

   48 expressionlist: expressionlist COMMA expr
   49               | expr

   50 identifierlist: IDENTIFIER COMMA identifierlist
   51               | IDENTIFIER

   52 unaryexpr: primaryexpr
   53          | unary_op unaryexpr

   54 unary_op: PLUS
   55         | UMINUS
   56         | NOT

   57 operand: literal
   58        | operandname
   59        | LPAREN expr RPAREN

   60 literal: basiclit

   61 basiclit: INTLITERAL
   62         | BOOLLITERAL

   63 operandname: IDENTIFIER

   64 primaryexpr: operand

   65 block: LBRACE statementlist RBRACE

   66 statementlist: statement SEMICOLON
   67              | statement SEMICOLON statementlist

   68 statement: declaration
   69          | block
   70          | ifstatement
   71          | forstatement
   72          | returnstatement
   73          | simplestatement

   74 simplestatement: expressionstatement
   75                | assignment
   76                | incdecstatement
   77                | emptystatement
   78                | shortvardecl

   79 emptystatement: ε

   80 expressionstatement: expr

   81 assignment: expressionlist assign_op expressionlist

   82 assign_op: ASSIGN
   83          | PLUSASSIGN
   84          | MINASSIGN
   85          | MULASSIGN
   86          | DIVASSIGN

   87 incdecstatement: expr INC
   88                | expr DEC

   89 ifstatement: IF simplestatement SEMICOLON expr block ELSE ifstatement
   90            | IF simplestatement SEMICOLON expr block ELSE block
   91            | IF expr block ELSE ifstatement
   92            | IF expr block ELSE block
   93            | IF expr block

   94 forstatement: FOR condition block
   95             | FOR forclause block
   96             | FOR block

   97 condition: expr

   98 forclause: initstatement SEMICOLON condition SEMICOLON poststatement

   99 initstatement: simplestatement

  100 poststatement: simplestatement

  101 returnstatement: RETURN expressionlist
  102                | RETURN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    SEMICOLON (258) 1 2 3 4 11 66 67 89 90 98
    INTEGER (259) 24
    BOOLEAN (260) 25
    PACKAGE (261) 5
    RETURN (262) 101 102
    VAR (263) 10 11
    IF (264) 89 90 91 92 93
    FOR (265) 94 95 96
    LPAREN (266) 11 22 28 29 30 59
    RPAREN (267) 11 22 28 29 30 59
    LBRACE (268) 65
    RBRACE (269) 65
    PLUS (270) 44 54
    MIN (271) 45
    MUL (272) 42
    DIV (273) 43
    PLUSASSIGN (274) 83
    MINASSIGN (275) 84
    MULASSIGN (276) 85
    DIVASSIGN (277) 86
    AND (278) 47
    OR (279) 46
    NOT (280) 56
    INC (281) 87
    DEC (282) 88
    GT (283) 40
    GE (284) 41
    LT (285) 38
    LE (286) 39
    EQ (287) 36
    NE (288) 37
    ASSIGN (289) 13 15 82
    FUNC (290) 16
    NEWLINE (291)
    IMPORT (292)
    COMMA (293) 29 31 48 50
    ELSE (294) 89 90 91 92
    SHORTVARASSIGN (295) 12
    IDENTIFIER <id> (296) 6 17 23 50 51 63
    BOOLLITERAL <boollit> (297) 62
    INTLITERAL <intlit> (298) 61
    UMINUS (299) 55


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    sourcefile <srcfile> (46)
        on left: 1 2
        on right: 0
    topleveldeclarations <decllist> (47)
        on left: 3 4
        on right: 1 3
    packageclause <packageclause> (48)
        on left: 5
        on right: 1 2
    packagename <identifier> (49)
        on left: 6
        on right: 5
    topleveldecl <toplvldecl> (50)
        on left: 7 8
        on right: 3 4
    declaration <toplvldecl> (51)
        on left: 9
        on right: 7 68
    vardecl <toplvldecl> (52)
        on left: 10 11
        on right: 9
    shortvardecl (53)
        on left: 12
        on right: 78
    varspec <varspec> (54)
        on left: 13 14 15
        on right: 10 11
    functiondeclaration <toplvldecl> (55)
        on left: 16
        on right: 8
    functionname <identifier> (56)
        on left: 17
        on right: 16
    functionbody <block> (57)
        on left: 18
        on right: 16
    signature <signature> (58)
        on left: 19 20
        on right: 16
    type <type> (59)
        on left: 21 22
        on right: 13 14 22 27 33 34
    typename <type> (60)
        on left: 23 24 25
        on right: 21
    result <result> (61)
        on left: 26 27
        on right: 19
    parameters <paramlist> (62)
        on left: 28 29 30
        on right: 19 20 26
    parameterlist <paramlist> (63)
        on left: 31 32
        on right: 29 30 31
    parameterdecl <paramdecl> (64)
        on left: 33 34
        on right: 31 32
    expr <exp> (65)
        on left: 35 36 37 38 39 40 41 42 43 44 45 46 47
        on right: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 59 80 87 88 89 90 91 92 93 97
    expressionlist <explist> (66)
        on left: 48 49
        on right: 12 13 15 48 81 101
    identifierlist <identifierlist> (67)
        on left: 50 51
        on right: 12 13 14 15 33 50
    unaryexpr <exp> (68)
        on left: 52 53
        on right: 35 53
    unary_op <unaryoperator> (69)
        on left: 54 55 56
        on right: 53
    operand <operand> (70)
        on left: 57 58 59
        on right: 64
    literal <literal> (71)
        on left: 60
        on right: 57
    basiclit <literal> (72)
        on left: 61 62
        on right: 60
    operandname <identifier> (73)
        on left: 63
        on right: 58
    primaryexpr <exp> (74)
        on left: 64
        on right: 52
    block <block> (75)
        on left: 65
        on right: 18 69 89 90 91 92 93 94 95 96
    statementlist <stmlist> (76)
        on left: 66 67
        on right: 65 67
    statement <stm> (77)
        on left: 68 69 70 71 72 73
        on right: 66 67
    simplestatement <stm> (78)
        on left: 74 75 76 77 78
        on right: 73 89 90 99 100
    emptystatement <stm> (79)
        on left: 79
        on right: 77
    expressionstatement <stm> (80)
        on left: 80
        on right: 74
    assignment <stm> (81)
        on left: 81
        on right: 75
    assign_op <assignoperator> (82)
        on left: 82 83 84 85 86
        on right: 81
    incdecstatement <stm> (83)
        on left: 87 88
        on right: 76
    ifstatement <stm> (84)
        on left: 89 90 91 92 93
        on right: 70 89 91
    forstatement <stm> (85)
        on left: 94 95 96
        on right: 71
    condition <exp> (86)
        on left: 97
        on right: 94 98
    forclause <forclause> (87)
        on left: 98
        on right: 95
    initstatement <stm> (88)
        on left: 99
        on right: 98
    poststatement <stm> (89)
        on left: 100
        on right: 98
    returnstatement <stm> (90)
        on left: 101 102
        on right: 72


State 0

    0 $accept: • sourcefile $end

    PACKAGE  shift, and go to state 1

    sourcefile     go to state 2
    packageclause  go to state 3


State 1

    5 packageclause: PACKAGE • packagename

    IDENTIFIER  shift, and go to state 4

    packagename  go to state 5


State 2

    0 $accept: sourcefile • $end

    $end  shift, and go to state 6


State 3

    1 sourcefile: packageclause • SEMICOLON topleveldeclarations
    2           | packageclause • SEMICOLON

    SEMICOLON  shift, and go to state 7


State 4

    6 packagename: IDENTIFIER •

    $default  reduce using rule 6 (packagename)


State 5

    5 packageclause: PACKAGE packagename •

    $default  reduce using rule 5 (packageclause)


State 6

    0 $accept: sourcefile $end •

    $default  accept


State 7

    1 sourcefile: packageclause SEMICOLON • topleveldeclarations
    2           | packageclause SEMICOLON •

    VAR   shift, and go to state 8
    FUNC  shift, and go to state 9

    $default  reduce using rule 2 (sourcefile)

    topleveldeclarations  go to state 10
    topleveldecl          go to state 11
    declaration           go to state 12
    vardecl               go to state 13
    functiondeclaration   go to state 14


State 8

   10 vardecl: VAR • varspec
   11        | VAR • LPAREN varspec SEMICOLON RPAREN

    LPAREN      shift, and go to state 15
    IDENTIFIER  shift, and go to state 16

    varspec         go to state 17
    identifierlist  go to state 18


State 9

   16 functiondeclaration: FUNC • functionname signature functionbody

    IDENTIFIER  shift, and go to state 19

    functionname  go to state 20


State 10

    1 sourcefile: packageclause SEMICOLON topleveldeclarations •

    $default  reduce using rule 1 (sourcefile)


State 11

    3 topleveldeclarations: topleveldecl • SEMICOLON topleveldeclarations
    4                     | topleveldecl • SEMICOLON

    SEMICOLON  shift, and go to state 21


State 12

    7 topleveldecl: declaration •

    $default  reduce using rule 7 (topleveldecl)


State 13

    9 declaration: vardecl •

    $default  reduce using rule 9 (declaration)


State 14

    8 topleveldecl: functiondeclaration •

    $default  reduce using rule 8 (topleveldecl)


State 15

   11 vardecl: VAR LPAREN • varspec SEMICOLON RPAREN

    IDENTIFIER  shift, and go to state 16

    varspec         go to state 22
    identifierlist  go to state 18


State 16

   50 identifierlist: IDENTIFIER • COMMA identifierlist
   51               | IDENTIFIER •

    COMMA  shift, and go to state 23

    $default  reduce using rule 51 (identifierlist)


State 17

   10 vardecl: VAR varspec •

    $default  reduce using rule 10 (vardecl)


State 18

   13 varspec: identifierlist • type ASSIGN expressionlist
   14        | identifierlist • type
   15        | identifierlist • ASSIGN expressionlist

    INTEGER     shift, and go to state 24
    BOOLEAN     shift, and go to state 25
    LPAREN      shift, and go to state 26
    ASSIGN      shift, and go to state 27
    IDENTIFIER  shift, and go to state 28

    type      go to state 29
    typename  go to state 30


State 19

   17 functionname: IDENTIFIER •

    $default  reduce using rule 17 (functionname)


State 20

   16 functiondeclaration: FUNC functionname • signature functionbody

    LPAREN  shift, and go to state 31

    signature   go to state 32
    parameters  go to state 33


State 21

    3 topleveldeclarations: topleveldecl SEMICOLON • topleveldeclarations
    4                     | topleveldecl SEMICOLON •

    VAR   shift, and go to state 8
    FUNC  shift, and go to state 9

    $default  reduce using rule 4 (topleveldeclarations)

    topleveldeclarations  go to state 34
    topleveldecl          go to state 11
    declaration           go to state 12
    vardecl               go to state 13
    functiondeclaration   go to state 14


State 22

   11 vardecl: VAR LPAREN varspec • SEMICOLON RPAREN

    SEMICOLON  shift, and go to state 35


State 23

   50 identifierlist: IDENTIFIER COMMA • identifierlist

    IDENTIFIER  shift, and go to state 16

    identifierlist  go to state 36


State 24

   24 typename: INTEGER •

    $default  reduce using rule 24 (typename)


State 25

   25 typename: BOOLEAN •

    $default  reduce using rule 25 (typename)


State 26

   22 type: LPAREN • type RPAREN

    INTEGER     shift, and go to state 24
    BOOLEAN     shift, and go to state 25
    LPAREN      shift, and go to state 26
    IDENTIFIER  shift, and go to state 28

    type      go to state 37
    typename  go to state 30


State 27

   15 varspec: identifierlist ASSIGN • expressionlist

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr            go to state 45
    expressionlist  go to state 46
    unaryexpr       go to state 47
    unary_op        go to state 48
    operand         go to state 49
    literal         go to state 50
    basiclit        go to state 51
    operandname     go to state 52
    primaryexpr     go to state 53


State 28

   23 typename: IDENTIFIER •

    $default  reduce using rule 23 (typename)


State 29

   13 varspec: identifierlist type • ASSIGN expressionlist
   14        | identifierlist type •

    ASSIGN  shift, and go to state 54

    $default  reduce using rule 14 (varspec)


State 30

   21 type: typename •

    $default  reduce using rule 21 (type)


State 31

   28 parameters: LPAREN • RPAREN
   29           | LPAREN • parameterlist COMMA RPAREN
   30           | LPAREN • parameterlist RPAREN

    INTEGER     shift, and go to state 24
    BOOLEAN     shift, and go to state 25
    LPAREN      shift, and go to state 26
    RPAREN      shift, and go to state 55
    IDENTIFIER  shift, and go to state 56

    type            go to state 57
    typename        go to state 30
    parameterlist   go to state 58
    parameterdecl   go to state 59
    identifierlist  go to state 60


State 32

   16 functiondeclaration: FUNC functionname signature • functionbody

    LBRACE  shift, and go to state 61

    functionbody  go to state 62
    block         go to state 63


State 33

   19 signature: parameters • result
   20          | parameters •

    INTEGER     shift, and go to state 24
    BOOLEAN     shift, and go to state 25
    LPAREN      shift, and go to state 64
    IDENTIFIER  shift, and go to state 28

    $default  reduce using rule 20 (signature)

    type        go to state 65
    typename    go to state 30
    result      go to state 66
    parameters  go to state 67


State 34

    3 topleveldeclarations: topleveldecl SEMICOLON topleveldeclarations •

    $default  reduce using rule 3 (topleveldeclarations)


State 35

   11 vardecl: VAR LPAREN varspec SEMICOLON • RPAREN

    RPAREN  shift, and go to state 68


State 36

   50 identifierlist: IDENTIFIER COMMA identifierlist •

    $default  reduce using rule 50 (identifierlist)


State 37

   22 type: LPAREN type • RPAREN

    RPAREN  shift, and go to state 69


State 38

   59 operand: LPAREN • expr RPAREN

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr         go to state 70
    unaryexpr    go to state 47
    unary_op     go to state 48
    operand      go to state 49
    literal      go to state 50
    basiclit     go to state 51
    operandname  go to state 52
    primaryexpr  go to state 53


State 39

   54 unary_op: PLUS •

    $default  reduce using rule 54 (unary_op)


State 40

   56 unary_op: NOT •

    $default  reduce using rule 56 (unary_op)


State 41

   63 operandname: IDENTIFIER •

    $default  reduce using rule 63 (operandname)


State 42

   62 basiclit: BOOLLITERAL •

    $default  reduce using rule 62 (basiclit)


State 43

   61 basiclit: INTLITERAL •

    $default  reduce using rule 61 (basiclit)


State 44

   55 unary_op: UMINUS •

    $default  reduce using rule 55 (unary_op)


State 45

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr
   49 expressionlist: expr •

    PLUS  shift, and go to state 71
    MIN   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    AND   shift, and go to state 75
    OR    shift, and go to state 76
    GT    shift, and go to state 77
    GE    shift, and go to state 78
    LT    shift, and go to state 79
    LE    shift, and go to state 80
    EQ    shift, and go to state 81
    NE    shift, and go to state 82

    $default  reduce using rule 49 (expressionlist)


State 46

   15 varspec: identifierlist ASSIGN expressionlist •
   48 expressionlist: expressionlist • COMMA expr

    COMMA  shift, and go to state 83

    $default  reduce using rule 15 (varspec)


State 47

   35 expr: unaryexpr •

    $default  reduce using rule 35 (expr)


State 48

   53 unaryexpr: unary_op • unaryexpr

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    unaryexpr    go to state 84
    unary_op     go to state 48
    operand      go to state 49
    literal      go to state 50
    basiclit     go to state 51
    operandname  go to state 52
    primaryexpr  go to state 53


State 49

   64 primaryexpr: operand •

    $default  reduce using rule 64 (primaryexpr)


State 50

   57 operand: literal •

    $default  reduce using rule 57 (operand)


State 51

   60 literal: basiclit •

    $default  reduce using rule 60 (literal)


State 52

   58 operand: operandname •

    $default  reduce using rule 58 (operand)


State 53

   52 unaryexpr: primaryexpr •

    $default  reduce using rule 52 (unaryexpr)


State 54

   13 varspec: identifierlist type ASSIGN • expressionlist

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr            go to state 45
    expressionlist  go to state 85
    unaryexpr       go to state 47
    unary_op        go to state 48
    operand         go to state 49
    literal         go to state 50
    basiclit        go to state 51
    operandname     go to state 52
    primaryexpr     go to state 53


State 55

   28 parameters: LPAREN RPAREN •

    $default  reduce using rule 28 (parameters)


State 56

   23 typename: IDENTIFIER •
   50 identifierlist: IDENTIFIER • COMMA identifierlist
   51               | IDENTIFIER •

    COMMA  shift, and go to state 23

    RPAREN    reduce using rule 23 (typename)
    COMMA     [reduce using rule 23 (typename)]
    $default  reduce using rule 51 (identifierlist)


State 57

   34 parameterdecl: type •

    $default  reduce using rule 34 (parameterdecl)


State 58

   29 parameters: LPAREN parameterlist • COMMA RPAREN
   30           | LPAREN parameterlist • RPAREN
   31 parameterlist: parameterlist • COMMA parameterdecl

    RPAREN  shift, and go to state 86
    COMMA   shift, and go to state 87


State 59

   32 parameterlist: parameterdecl •

    $default  reduce using rule 32 (parameterlist)


State 60

   33 parameterdecl: identifierlist • type

    INTEGER     shift, and go to state 24
    BOOLEAN     shift, and go to state 25
    LPAREN      shift, and go to state 26
    IDENTIFIER  shift, and go to state 28

    type      go to state 88
    typename  go to state 30


State 61

   65 block: LBRACE • statementlist RBRACE

    RETURN       shift, and go to state 89
    VAR          shift, and go to state 8
    IF           shift, and go to state 90
    FOR          shift, and go to state 91
    LPAREN       shift, and go to state 38
    LBRACE       shift, and go to state 61
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 92
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    $default  reduce using rule 79 (emptystatement)

    declaration          go to state 93
    vardecl              go to state 13
    shortvardecl         go to state 94
    expr                 go to state 95
    expressionlist       go to state 96
    identifierlist       go to state 97
    unaryexpr            go to state 47
    unary_op             go to state 48
    operand              go to state 49
    literal              go to state 50
    basiclit             go to state 51
    operandname          go to state 52
    primaryexpr          go to state 53
    block                go to state 98
    statementlist        go to state 99
    statement            go to state 100
    simplestatement      go to state 101
    emptystatement       go to state 102
    expressionstatement  go to state 103
    assignment           go to state 104
    incdecstatement      go to state 105
    ifstatement          go to state 106
    forstatement         go to state 107
    returnstatement      go to state 108


State 62

   16 functiondeclaration: FUNC functionname signature functionbody •

    $default  reduce using rule 16 (functiondeclaration)


State 63

   18 functionbody: block •

    $default  reduce using rule 18 (functionbody)


State 64

   22 type: LPAREN • type RPAREN
   28 parameters: LPAREN • RPAREN
   29           | LPAREN • parameterlist COMMA RPAREN
   30           | LPAREN • parameterlist RPAREN

    INTEGER     shift, and go to state 24
    BOOLEAN     shift, and go to state 25
    LPAREN      shift, and go to state 26
    RPAREN      shift, and go to state 55
    IDENTIFIER  shift, and go to state 56

    type            go to state 109
    typename        go to state 30
    parameterlist   go to state 58
    parameterdecl   go to state 59
    identifierlist  go to state 60


State 65

   27 result: type •

    $default  reduce using rule 27 (result)


State 66

   19 signature: parameters result •

    $default  reduce using rule 19 (signature)


State 67

   26 result: parameters •

    $default  reduce using rule 26 (result)


State 68

   11 vardecl: VAR LPAREN varspec SEMICOLON RPAREN •

    $default  reduce using rule 11 (vardecl)


State 69

   22 type: LPAREN type RPAREN •

    $default  reduce using rule 22 (type)


State 70

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr
   59 operand: LPAREN expr • RPAREN

    RPAREN  shift, and go to state 110
    PLUS    shift, and go to state 71
    MIN     shift, and go to state 72
    MUL     shift, and go to state 73
    DIV     shift, and go to state 74
    AND     shift, and go to state 75
    OR      shift, and go to state 76
    GT      shift, and go to state 77
    GE      shift, and go to state 78
    LT      shift, and go to state 79
    LE      shift, and go to state 80
    EQ      shift, and go to state 81
    NE      shift, and go to state 82


State 71

   44 expr: expr PLUS • expr

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr         go to state 111
    unaryexpr    go to state 47
    unary_op     go to state 48
    operand      go to state 49
    literal      go to state 50
    basiclit     go to state 51
    operandname  go to state 52
    primaryexpr  go to state 53


State 72

   45 expr: expr MIN • expr

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr         go to state 112
    unaryexpr    go to state 47
    unary_op     go to state 48
    operand      go to state 49
    literal      go to state 50
    basiclit     go to state 51
    operandname  go to state 52
    primaryexpr  go to state 53


State 73

   42 expr: expr MUL • expr

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr         go to state 113
    unaryexpr    go to state 47
    unary_op     go to state 48
    operand      go to state 49
    literal      go to state 50
    basiclit     go to state 51
    operandname  go to state 52
    primaryexpr  go to state 53


State 74

   43 expr: expr DIV • expr

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr         go to state 114
    unaryexpr    go to state 47
    unary_op     go to state 48
    operand      go to state 49
    literal      go to state 50
    basiclit     go to state 51
    operandname  go to state 52
    primaryexpr  go to state 53


State 75

   47 expr: expr AND • expr

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr         go to state 115
    unaryexpr    go to state 47
    unary_op     go to state 48
    operand      go to state 49
    literal      go to state 50
    basiclit     go to state 51
    operandname  go to state 52
    primaryexpr  go to state 53


State 76

   46 expr: expr OR • expr

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr         go to state 116
    unaryexpr    go to state 47
    unary_op     go to state 48
    operand      go to state 49
    literal      go to state 50
    basiclit     go to state 51
    operandname  go to state 52
    primaryexpr  go to state 53


State 77

   40 expr: expr GT • expr

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr         go to state 117
    unaryexpr    go to state 47
    unary_op     go to state 48
    operand      go to state 49
    literal      go to state 50
    basiclit     go to state 51
    operandname  go to state 52
    primaryexpr  go to state 53


State 78

   41 expr: expr GE • expr

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr         go to state 118
    unaryexpr    go to state 47
    unary_op     go to state 48
    operand      go to state 49
    literal      go to state 50
    basiclit     go to state 51
    operandname  go to state 52
    primaryexpr  go to state 53


State 79

   38 expr: expr LT • expr

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr         go to state 119
    unaryexpr    go to state 47
    unary_op     go to state 48
    operand      go to state 49
    literal      go to state 50
    basiclit     go to state 51
    operandname  go to state 52
    primaryexpr  go to state 53


State 80

   39 expr: expr LE • expr

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr         go to state 120
    unaryexpr    go to state 47
    unary_op     go to state 48
    operand      go to state 49
    literal      go to state 50
    basiclit     go to state 51
    operandname  go to state 52
    primaryexpr  go to state 53


State 81

   36 expr: expr EQ • expr

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr         go to state 121
    unaryexpr    go to state 47
    unary_op     go to state 48
    operand      go to state 49
    literal      go to state 50
    basiclit     go to state 51
    operandname  go to state 52
    primaryexpr  go to state 53


State 82

   37 expr: expr NE • expr

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr         go to state 122
    unaryexpr    go to state 47
    unary_op     go to state 48
    operand      go to state 49
    literal      go to state 50
    basiclit     go to state 51
    operandname  go to state 52
    primaryexpr  go to state 53


State 83

   48 expressionlist: expressionlist COMMA • expr

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr         go to state 123
    unaryexpr    go to state 47
    unary_op     go to state 48
    operand      go to state 49
    literal      go to state 50
    basiclit     go to state 51
    operandname  go to state 52
    primaryexpr  go to state 53


State 84

   53 unaryexpr: unary_op unaryexpr •

    $default  reduce using rule 53 (unaryexpr)


State 85

   13 varspec: identifierlist type ASSIGN expressionlist •
   48 expressionlist: expressionlist • COMMA expr

    COMMA  shift, and go to state 83

    $default  reduce using rule 13 (varspec)


State 86

   30 parameters: LPAREN parameterlist RPAREN •

    $default  reduce using rule 30 (parameters)


State 87

   29 parameters: LPAREN parameterlist COMMA • RPAREN
   31 parameterlist: parameterlist COMMA • parameterdecl

    INTEGER     shift, and go to state 24
    BOOLEAN     shift, and go to state 25
    LPAREN      shift, and go to state 26
    RPAREN      shift, and go to state 124
    IDENTIFIER  shift, and go to state 56

    type            go to state 57
    typename        go to state 30
    parameterdecl   go to state 125
    identifierlist  go to state 60


State 88

   33 parameterdecl: identifierlist type •

    $default  reduce using rule 33 (parameterdecl)


State 89

  101 returnstatement: RETURN • expressionlist
  102                | RETURN •

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    $default  reduce using rule 102 (returnstatement)

    expr            go to state 45
    expressionlist  go to state 126
    unaryexpr       go to state 47
    unary_op        go to state 48
    operand         go to state 49
    literal         go to state 50
    basiclit        go to state 51
    operandname     go to state 52
    primaryexpr     go to state 53


State 90

   89 ifstatement: IF • simplestatement SEMICOLON expr block ELSE ifstatement
   90            | IF • simplestatement SEMICOLON expr block ELSE block
   91            | IF • expr block ELSE ifstatement
   92            | IF • expr block ELSE block
   93            | IF • expr block

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 92
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    $default  reduce using rule 79 (emptystatement)

    shortvardecl         go to state 94
    expr                 go to state 127
    expressionlist       go to state 96
    identifierlist       go to state 97
    unaryexpr            go to state 47
    unary_op             go to state 48
    operand              go to state 49
    literal              go to state 50
    basiclit             go to state 51
    operandname          go to state 52
    primaryexpr          go to state 53
    simplestatement      go to state 128
    emptystatement       go to state 102
    expressionstatement  go to state 103
    assignment           go to state 104
    incdecstatement      go to state 105


State 91

   94 forstatement: FOR • condition block
   95             | FOR • forclause block
   96             | FOR • block

    LPAREN       shift, and go to state 38
    LBRACE       shift, and go to state 61
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 92
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    $default  reduce using rule 79 (emptystatement)

    shortvardecl         go to state 94
    expr                 go to state 129
    expressionlist       go to state 96
    identifierlist       go to state 97
    unaryexpr            go to state 47
    unary_op             go to state 48
    operand              go to state 49
    literal              go to state 50
    basiclit             go to state 51
    operandname          go to state 52
    primaryexpr          go to state 53
    block                go to state 130
    simplestatement      go to state 131
    emptystatement       go to state 102
    expressionstatement  go to state 103
    assignment           go to state 104
    incdecstatement      go to state 105
    condition            go to state 132
    forclause            go to state 133
    initstatement        go to state 134


State 92

   50 identifierlist: IDENTIFIER • COMMA identifierlist
   51               | IDENTIFIER •
   63 operandname: IDENTIFIER •

    COMMA  shift, and go to state 23

    COMMA           [reduce using rule 63 (operandname)]
    SHORTVARASSIGN  reduce using rule 51 (identifierlist)
    $default        reduce using rule 63 (operandname)


State 93

   68 statement: declaration •

    $default  reduce using rule 68 (statement)


State 94

   78 simplestatement: shortvardecl •

    $default  reduce using rule 78 (simplestatement)


State 95

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr
   49 expressionlist: expr •
   80 expressionstatement: expr •
   87 incdecstatement: expr • INC
   88                | expr • DEC

    PLUS  shift, and go to state 71
    MIN   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    AND   shift, and go to state 75
    OR    shift, and go to state 76
    INC   shift, and go to state 135
    DEC   shift, and go to state 136
    GT    shift, and go to state 77
    GE    shift, and go to state 78
    LT    shift, and go to state 79
    LE    shift, and go to state 80
    EQ    shift, and go to state 81
    NE    shift, and go to state 82

    SEMICOLON  reduce using rule 80 (expressionstatement)
    LBRACE     reduce using rule 80 (expressionstatement)
    $default   reduce using rule 49 (expressionlist)


State 96

   48 expressionlist: expressionlist • COMMA expr
   81 assignment: expressionlist • assign_op expressionlist

    PLUSASSIGN  shift, and go to state 137
    MINASSIGN   shift, and go to state 138
    MULASSIGN   shift, and go to state 139
    DIVASSIGN   shift, and go to state 140
    ASSIGN      shift, and go to state 141
    COMMA       shift, and go to state 83

    assign_op  go to state 142


State 97

   12 shortvardecl: identifierlist • SHORTVARASSIGN expressionlist

    SHORTVARASSIGN  shift, and go to state 143


State 98

   69 statement: block •

    $default  reduce using rule 69 (statement)


State 99

   65 block: LBRACE statementlist • RBRACE

    RBRACE  shift, and go to state 144


State 100

   66 statementlist: statement • SEMICOLON
   67              | statement • SEMICOLON statementlist

    SEMICOLON  shift, and go to state 145


State 101

   73 statement: simplestatement •

    $default  reduce using rule 73 (statement)


State 102

   77 simplestatement: emptystatement •

    $default  reduce using rule 77 (simplestatement)


State 103

   74 simplestatement: expressionstatement •

    $default  reduce using rule 74 (simplestatement)


State 104

   75 simplestatement: assignment •

    $default  reduce using rule 75 (simplestatement)


State 105

   76 simplestatement: incdecstatement •

    $default  reduce using rule 76 (simplestatement)


State 106

   70 statement: ifstatement •

    $default  reduce using rule 70 (statement)


State 107

   71 statement: forstatement •

    $default  reduce using rule 71 (statement)


State 108

   72 statement: returnstatement •

    $default  reduce using rule 72 (statement)


State 109

   22 type: LPAREN type • RPAREN
   34 parameterdecl: type •

    RPAREN  shift, and go to state 69

    RPAREN    [reduce using rule 34 (parameterdecl)]
    $default  reduce using rule 34 (parameterdecl)


State 110

   59 operand: LPAREN expr RPAREN •

    $default  reduce using rule 59 (operand)


State 111

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   44     | expr PLUS expr •
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr

    MUL  shift, and go to state 73
    DIV  shift, and go to state 74

    $default  reduce using rule 44 (expr)


State 112

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   45     | expr MIN expr •
   46     | expr • OR expr
   47     | expr • AND expr

    MUL  shift, and go to state 73
    DIV  shift, and go to state 74

    $default  reduce using rule 45 (expr)


State 113

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   42     | expr MUL expr •
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr

    $default  reduce using rule 42 (expr)


State 114

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   43     | expr DIV expr •
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr

    $default  reduce using rule 43 (expr)


State 115

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr
   47     | expr AND expr •

    PLUS  shift, and go to state 71
    MIN   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    GT    shift, and go to state 77
    GE    shift, and go to state 78
    LT    shift, and go to state 79
    LE    shift, and go to state 80
    EQ    shift, and go to state 81
    NE    shift, and go to state 82

    $default  reduce using rule 47 (expr)


State 116

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   46     | expr OR expr •
   47     | expr • AND expr

    PLUS  shift, and go to state 71
    MIN   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    AND   shift, and go to state 75
    GT    shift, and go to state 77
    GE    shift, and go to state 78
    LT    shift, and go to state 79
    LE    shift, and go to state 80
    EQ    shift, and go to state 81
    NE    shift, and go to state 82

    $default  reduce using rule 46 (expr)


State 117

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   40     | expr GT expr •
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr

    PLUS  shift, and go to state 71
    MIN   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74

    $default  reduce using rule 40 (expr)


State 118

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   41     | expr GE expr •
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr

    PLUS  shift, and go to state 71
    MIN   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74

    $default  reduce using rule 41 (expr)


State 119

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   38     | expr LT expr •
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr

    PLUS  shift, and go to state 71
    MIN   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74

    $default  reduce using rule 38 (expr)


State 120

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   39     | expr LE expr •
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr

    PLUS  shift, and go to state 71
    MIN   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74

    $default  reduce using rule 39 (expr)


State 121

   36 expr: expr • EQ expr
   36     | expr EQ expr •
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr

    PLUS  shift, and go to state 71
    MIN   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74

    $default  reduce using rule 36 (expr)


State 122

   36 expr: expr • EQ expr
   37     | expr • NE expr
   37     | expr NE expr •
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr

    PLUS  shift, and go to state 71
    MIN   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74

    $default  reduce using rule 37 (expr)


State 123

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr
   48 expressionlist: expressionlist COMMA expr •

    PLUS  shift, and go to state 71
    MIN   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    AND   shift, and go to state 75
    OR    shift, and go to state 76
    GT    shift, and go to state 77
    GE    shift, and go to state 78
    LT    shift, and go to state 79
    LE    shift, and go to state 80
    EQ    shift, and go to state 81
    NE    shift, and go to state 82

    $default  reduce using rule 48 (expressionlist)


State 124

   29 parameters: LPAREN parameterlist COMMA RPAREN •

    $default  reduce using rule 29 (parameters)


State 125

   31 parameterlist: parameterlist COMMA parameterdecl •

    $default  reduce using rule 31 (parameterlist)


State 126

   48 expressionlist: expressionlist • COMMA expr
  101 returnstatement: RETURN expressionlist •

    COMMA  shift, and go to state 83

    $default  reduce using rule 101 (returnstatement)


State 127

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr
   49 expressionlist: expr •
   80 expressionstatement: expr •
   87 incdecstatement: expr • INC
   88                | expr • DEC
   91 ifstatement: IF expr • block ELSE ifstatement
   92            | IF expr • block ELSE block
   93            | IF expr • block

    LBRACE  shift, and go to state 61
    PLUS    shift, and go to state 71
    MIN     shift, and go to state 72
    MUL     shift, and go to state 73
    DIV     shift, and go to state 74
    AND     shift, and go to state 75
    OR      shift, and go to state 76
    INC     shift, and go to state 135
    DEC     shift, and go to state 136
    GT      shift, and go to state 77
    GE      shift, and go to state 78
    LT      shift, and go to state 79
    LE      shift, and go to state 80
    EQ      shift, and go to state 81
    NE      shift, and go to state 82

    SEMICOLON  reduce using rule 80 (expressionstatement)
    $default   reduce using rule 49 (expressionlist)

    block  go to state 146


State 128

   89 ifstatement: IF simplestatement • SEMICOLON expr block ELSE ifstatement
   90            | IF simplestatement • SEMICOLON expr block ELSE block

    SEMICOLON  shift, and go to state 147


State 129

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr
   49 expressionlist: expr •
   80 expressionstatement: expr •
   87 incdecstatement: expr • INC
   88                | expr • DEC
   97 condition: expr •

    PLUS  shift, and go to state 71
    MIN   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    AND   shift, and go to state 75
    OR    shift, and go to state 76
    INC   shift, and go to state 135
    DEC   shift, and go to state 136
    GT    shift, and go to state 77
    GE    shift, and go to state 78
    LT    shift, and go to state 79
    LE    shift, and go to state 80
    EQ    shift, and go to state 81
    NE    shift, and go to state 82

    SEMICOLON  reduce using rule 80 (expressionstatement)
    LBRACE     reduce using rule 97 (condition)
    $default   reduce using rule 49 (expressionlist)


State 130

   96 forstatement: FOR block •

    $default  reduce using rule 96 (forstatement)


State 131

   99 initstatement: simplestatement •

    $default  reduce using rule 99 (initstatement)


State 132

   94 forstatement: FOR condition • block

    LBRACE  shift, and go to state 61

    block  go to state 148


State 133

   95 forstatement: FOR forclause • block

    LBRACE  shift, and go to state 61

    block  go to state 149


State 134

   98 forclause: initstatement • SEMICOLON condition SEMICOLON poststatement

    SEMICOLON  shift, and go to state 150


State 135

   87 incdecstatement: expr INC •

    $default  reduce using rule 87 (incdecstatement)


State 136

   88 incdecstatement: expr DEC •

    $default  reduce using rule 88 (incdecstatement)


State 137

   83 assign_op: PLUSASSIGN •

    $default  reduce using rule 83 (assign_op)


State 138

   84 assign_op: MINASSIGN •

    $default  reduce using rule 84 (assign_op)


State 139

   85 assign_op: MULASSIGN •

    $default  reduce using rule 85 (assign_op)


State 140

   86 assign_op: DIVASSIGN •

    $default  reduce using rule 86 (assign_op)


State 141

   82 assign_op: ASSIGN •

    $default  reduce using rule 82 (assign_op)


State 142

   81 assignment: expressionlist assign_op • expressionlist

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr            go to state 45
    expressionlist  go to state 151
    unaryexpr       go to state 47
    unary_op        go to state 48
    operand         go to state 49
    literal         go to state 50
    basiclit        go to state 51
    operandname     go to state 52
    primaryexpr     go to state 53


State 143

   12 shortvardecl: identifierlist SHORTVARASSIGN • expressionlist

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr            go to state 45
    expressionlist  go to state 152
    unaryexpr       go to state 47
    unary_op        go to state 48
    operand         go to state 49
    literal         go to state 50
    basiclit        go to state 51
    operandname     go to state 52
    primaryexpr     go to state 53


State 144

   65 block: LBRACE statementlist RBRACE •

    $default  reduce using rule 65 (block)


State 145

   66 statementlist: statement SEMICOLON •
   67              | statement SEMICOLON • statementlist

    RETURN       shift, and go to state 89
    VAR          shift, and go to state 8
    IF           shift, and go to state 90
    FOR          shift, and go to state 91
    LPAREN       shift, and go to state 38
    LBRACE       shift, and go to state 61
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 92
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    SEMICOLON  reduce using rule 79 (emptystatement)
    $default   reduce using rule 66 (statementlist)

    declaration          go to state 93
    vardecl              go to state 13
    shortvardecl         go to state 94
    expr                 go to state 95
    expressionlist       go to state 96
    identifierlist       go to state 97
    unaryexpr            go to state 47
    unary_op             go to state 48
    operand              go to state 49
    literal              go to state 50
    basiclit             go to state 51
    operandname          go to state 52
    primaryexpr          go to state 53
    block                go to state 98
    statementlist        go to state 153
    statement            go to state 100
    simplestatement      go to state 101
    emptystatement       go to state 102
    expressionstatement  go to state 103
    assignment           go to state 104
    incdecstatement      go to state 105
    ifstatement          go to state 106
    forstatement         go to state 107
    returnstatement      go to state 108


State 146

   91 ifstatement: IF expr block • ELSE ifstatement
   92            | IF expr block • ELSE block
   93            | IF expr block •

    ELSE  shift, and go to state 154

    $default  reduce using rule 93 (ifstatement)


State 147

   89 ifstatement: IF simplestatement SEMICOLON • expr block ELSE ifstatement
   90            | IF simplestatement SEMICOLON • expr block ELSE block

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr         go to state 155
    unaryexpr    go to state 47
    unary_op     go to state 48
    operand      go to state 49
    literal      go to state 50
    basiclit     go to state 51
    operandname  go to state 52
    primaryexpr  go to state 53


State 148

   94 forstatement: FOR condition block •

    $default  reduce using rule 94 (forstatement)


State 149

   95 forstatement: FOR forclause block •

    $default  reduce using rule 95 (forstatement)


State 150

   98 forclause: initstatement SEMICOLON • condition SEMICOLON poststatement

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 41
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    expr         go to state 156
    unaryexpr    go to state 47
    unary_op     go to state 48
    operand      go to state 49
    literal      go to state 50
    basiclit     go to state 51
    operandname  go to state 52
    primaryexpr  go to state 53
    condition    go to state 157


State 151

   48 expressionlist: expressionlist • COMMA expr
   81 assignment: expressionlist assign_op expressionlist •

    COMMA  shift, and go to state 83

    $default  reduce using rule 81 (assignment)


State 152

   12 shortvardecl: identifierlist SHORTVARASSIGN expressionlist •
   48 expressionlist: expressionlist • COMMA expr

    COMMA  shift, and go to state 83

    $default  reduce using rule 12 (shortvardecl)


State 153

   67 statementlist: statement SEMICOLON statementlist •

    $default  reduce using rule 67 (statementlist)


State 154

   91 ifstatement: IF expr block ELSE • ifstatement
   92            | IF expr block ELSE • block

    IF      shift, and go to state 90
    LBRACE  shift, and go to state 61

    block        go to state 158
    ifstatement  go to state 159


State 155

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr
   89 ifstatement: IF simplestatement SEMICOLON expr • block ELSE ifstatement
   90            | IF simplestatement SEMICOLON expr • block ELSE block

    LBRACE  shift, and go to state 61
    PLUS    shift, and go to state 71
    MIN     shift, and go to state 72
    MUL     shift, and go to state 73
    DIV     shift, and go to state 74
    AND     shift, and go to state 75
    OR      shift, and go to state 76
    GT      shift, and go to state 77
    GE      shift, and go to state 78
    LT      shift, and go to state 79
    LE      shift, and go to state 80
    EQ      shift, and go to state 81
    NE      shift, and go to state 82

    block  go to state 160


State 156

   36 expr: expr • EQ expr
   37     | expr • NE expr
   38     | expr • LT expr
   39     | expr • LE expr
   40     | expr • GT expr
   41     | expr • GE expr
   42     | expr • MUL expr
   43     | expr • DIV expr
   44     | expr • PLUS expr
   45     | expr • MIN expr
   46     | expr • OR expr
   47     | expr • AND expr
   97 condition: expr •

    PLUS  shift, and go to state 71
    MIN   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    AND   shift, and go to state 75
    OR    shift, and go to state 76
    GT    shift, and go to state 77
    GE    shift, and go to state 78
    LT    shift, and go to state 79
    LE    shift, and go to state 80
    EQ    shift, and go to state 81
    NE    shift, and go to state 82

    $default  reduce using rule 97 (condition)


State 157

   98 forclause: initstatement SEMICOLON condition • SEMICOLON poststatement

    SEMICOLON  shift, and go to state 161


State 158

   92 ifstatement: IF expr block ELSE block •

    $default  reduce using rule 92 (ifstatement)


State 159

   91 ifstatement: IF expr block ELSE ifstatement •

    $default  reduce using rule 91 (ifstatement)


State 160

   89 ifstatement: IF simplestatement SEMICOLON expr block • ELSE ifstatement
   90            | IF simplestatement SEMICOLON expr block • ELSE block

    ELSE  shift, and go to state 162


State 161

   98 forclause: initstatement SEMICOLON condition SEMICOLON • poststatement

    LPAREN       shift, and go to state 38
    PLUS         shift, and go to state 39
    NOT          shift, and go to state 40
    IDENTIFIER   shift, and go to state 92
    BOOLLITERAL  shift, and go to state 42
    INTLITERAL   shift, and go to state 43
    UMINUS       shift, and go to state 44

    $default  reduce using rule 79 (emptystatement)

    shortvardecl         go to state 94
    expr                 go to state 95
    expressionlist       go to state 96
    identifierlist       go to state 97
    unaryexpr            go to state 47
    unary_op             go to state 48
    operand              go to state 49
    literal              go to state 50
    basiclit             go to state 51
    operandname          go to state 52
    primaryexpr          go to state 53
    simplestatement      go to state 163
    emptystatement       go to state 102
    expressionstatement  go to state 103
    assignment           go to state 104
    incdecstatement      go to state 105
    poststatement        go to state 164


State 162

   89 ifstatement: IF simplestatement SEMICOLON expr block ELSE • ifstatement
   90            | IF simplestatement SEMICOLON expr block ELSE • block

    IF      shift, and go to state 90
    LBRACE  shift, and go to state 61

    block        go to state 165
    ifstatement  go to state 166


State 163

  100 poststatement: simplestatement •

    $default  reduce using rule 100 (poststatement)


State 164

   98 forclause: initstatement SEMICOLON condition SEMICOLON poststatement •

    $default  reduce using rule 98 (forclause)


State 165

   90 ifstatement: IF simplestatement SEMICOLON expr block ELSE block •

    $default  reduce using rule 90 (ifstatement)


State 166

   89 ifstatement: IF simplestatement SEMICOLON expr block ELSE ifstatement •

    $default  reduce using rule 89 (ifstatement)
